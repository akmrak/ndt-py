doxx@maddoxx-Studio-1558:~/PycharmProjects/ndt$ ls
cfrp_16_holes_DFM001to01_100s.mat
correlated_curve.jpg
curve_fit_intensity.jpg
curve_fitting_intensity_polynomial_2.jpg
f1
README
maddoxx@maddoxx-Studio-1558:~/PycharmProjects/ndt$ python  
Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
[GCC 4.8.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import numpy as np
>>> import scipy as sp
>>> import scipy.io as io
>>> import pylab as p1

>>> import matplotlib.image as mpimg
>>> 
>>> mat=io.loadmat('/home/maddoxx/cfrp_16_holes_DFM001to01_100s.mat')
>>> a=mat['imgseq']
>>> a
array([[[3488, 3488, 3487, ..., 3560, 3559, 3562],
        [3486, 3488, 3485, ..., 3560, 3561, 3560],
        [3485, 3482, 3487, ..., 3558, 3560, 3560],
        ..., 
        [3673, 3674, 3676, ..., 8195, 8155, 8193],
        [3704, 3702, 3703, ..., 6752, 6730, 6747],
        [3721, 3720, 3718, ..., 6271, 6256, 6268]],

       [[3490, 3488, 3489, ..., 3560, 3557, 3564],
        [3487, 3488, 3488, ..., 3558, 3559, 3558],
        [3489, 3490, 3491, ..., 3564, 3566, 3564],
        ..., 
        [3667, 3671, 3669, ..., 8206, 8163, 8194],
        [3701, 3703, 3705, ..., 6603, 6586, 6605],
        [3738, 3738, 3733, ..., 5789, 5782, 5789]],

       [[3481, 3485, 3486, ..., 3561, 3557, 3558],
        [3485, 3488, 3488, ..., 3560, 3559, 3559],
        [3487, 3487, 3486, ..., 3559, 3561, 3558],
        ..., 
        [3668, 3667, 3666, ..., 7992, 7954, 7989],
        [3702, 3703, 3702, ..., 6573, 6546, 6564],
        [3737, 3738, 3736, ..., 5722, 5714, 5725]],

       ..., 
       [[3459, 3456, 3459, ..., 3517, 3515, 3516],
        [3462, 3461, 3464, ..., 3520, 3521, 3519],
        [3463, 3462, 3461, ..., 3518, 3517, 3518],
        ..., 
        [3684, 3681, 3685, ..., 4992, 4995, 4996],
        [3696, 3697, 3692, ..., 4954, 4952, 4956],
        [3713, 3709, 3714, ..., 4958, 4956, 4953]],

       [[3458, 3455, 3461, ..., 3518, 3514, 3519],
        [3465, 3465, 3462, ..., 3519, 3518, 3515],
        [3461, 3461, 3461, ..., 3516, 3520, 3520],
        ..., 
        [3687, 3687, 3688, ..., 5019, 5015, 5018],
        [3696, 3698, 3700, ..., 4968, 4964, 4969],
        [3711, 3712, 3712, ..., 4969, 4967, 4965]],

       [[3461, 3461, 3463, ..., 3521, 3519, 3521],
        [3463, 3466, 3464, ..., 3523, 3524, 3523],
        [3464, 3465, 3468, ..., 3522, 3523, 3529],
        ..., 
        [3698, 3692, 3696, ..., 5038, 5035, 5038],
        [3708, 3709, 3707, ..., 5017, 5011, 5019],
        [3710, 3711, 3710, ..., 4993, 4989, 4992]]], dtype=uint16)
>>> a                   
array([[[3488, 3488, 3487, ..., 3560, 3559, 3562],
        [3486, 3488, 3485, ..., 3560, 3561, 3560],
        [3485, 3482, 3487, ..., 3558, 3560, 3560],
        ..., 
        [3673, 3674, 3676, ..., 8195, 8155, 8193],
        [3704, 3702, 3703, ..., 6752, 6730, 6747],
        [3721, 3720, 3718, ..., 6271, 6256, 6268]],

       [[3490, 3488, 3489, ..., 3560, 3557, 3564],
        [3487, 3488, 3488, ..., 3558, 3559, 3558],
        [3489, 3490, 3491, ..., 3564, 3566, 3564],
        ..., 
        [3667, 3671, 3669, ..., 8206, 8163, 8194],
        [3701, 3703, 3705, ..., 6603, 6586, 6605],
        [3738, 3738, 3733, ..., 5789, 5782, 5789]],

       [[3481, 3485, 3486, ..., 3561, 3557, 3558],
        [3485, 3488, 3488, ..., 3560, 3559, 3559],
        [3487, 3487, 3486, ..., 3559, 3561, 3558],
        ..., 
        [3668, 3667, 3666, ..., 7992, 7954, 7989],
        [3702, 3703, 3702, ..., 6573, 6546, 6564],
        [3737, 3738, 3736, ..., 5722, 5714, 5725]],

       ..., 
       [[3459, 3456, 3459, ..., 3517, 3515, 3516],
        [3462, 3461, 3464, ..., 3520, 3521, 3519],
        [3463, 3462, 3461, ..., 3518, 3517, 3518],
        ..., 
        [3684, 3681, 3685, ..., 4992, 4995, 4996],
        [3696, 3697, 3692, ..., 4954, 4952, 4956],
        [3713, 3709, 3714, ..., 4958, 4956, 4953]],

       [[3458, 3455, 3461, ..., 3518, 3514, 3519],
        [3465, 3465, 3462, ..., 3519, 3518, 3515],
        [3461, 3461, 3461, ..., 3516, 3520, 3520],
        ..., 
        [3687, 3687, 3688, ..., 5019, 5015, 5018],
        [3696, 3698, 3700, ..., 4968, 4964, 4969],
        [3711, 3712, 3712, ..., 4969, 4967, 4965]],

       [[3461, 3461, 3463, ..., 3521, 3519, 3521],
        [3463, 3466, 3464, ..., 3523, 3524, 3523],
        [3464, 3465, 3468, ..., 3522, 3523, 3529],
        ..., 
        [3698, 3692, 3696, ..., 5038, 5035, 5038],
        [3708, 3709, 3707, ..., 5017, 5011, 5019],
        [3710, 3711, 3710, ..., 4993, 4989, 4992]]], dtype=uint16)
>>> a(:,:,1)
  File "<stdin>", line 1
    a(:,:,1)
      ^
SyntaxError: invalid syntax
>>> a.shape
(320, 256, 2800)
>>> a(0:320,0256:,1)
  File "<stdin>", line 1
    a(0:320,0256:,1)
       ^
SyntaxError: invalid syntax
>>> a(0:320,0:256,1)
  File "<stdin>", line 1
    a(0:320,0:256,1)
       ^
SyntaxError: invalid syntax
>>> a[0:320][0:256][1]
array([[3490, 3488, 3489, ..., 3560, 3557, 3564],
       [3487, 3488, 3488, ..., 3558, 3559, 3558],
       [3489, 3490, 3491, ..., 3564, 3566, 3564],
       ..., 
       [3667, 3671, 3669, ..., 8206, 8163, 8194],
       [3701, 3703, 3705, ..., 6603, 6586, 6605],
       [3738, 3738, 3733, ..., 5789, 5782, 5789]], dtype=uint16)
>>> a[0:320][0:256][1].shape
(256, 2800)
>>> a[0:320][0:256][2].shape
(256, 2800)
>>> a[0:320][0:256][].shape
  File "<stdin>", line 1
    a[0:320][0:256][].shape
                    ^
SyntaxError: invalid syntax
>>> a[0:320][0:256][1].shape
(256, 2800)
>>> a[0:320][0:256][1].shape
(256, 2800)
>>> b=a[0:320][0:256][1]    
>>> b.shape
(256, 2800)
>>> b=a[0:320][0:256][1:2]
>>> b.shape               
(1, 256, 2800)
>>> b=a[0:320][0:256][1:2]
>>> k=np.array(a)
>>> k.shape
(320, 256, 2800)
>>> s.shape
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 's' is not defined
>>> a.shape
(320, 256, 2800)
>>> k.shape
(320, 256, 2800)
>>> imgplot=p1.imshow(k)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/pymodules/python2.7/matplotlib/pyplot.py", line 2892, in imshow
    imlim=imlim, resample=resample, url=url, **kwargs)
  File "/usr/lib/pymodules/python2.7/matplotlib/axes.py", line 7300, in imshow
    im.set_data(X)
  File "/usr/lib/pymodules/python2.7/matplotlib/image.py", line 429, in set_data
    raise TypeError("Invalid dimensions for image data")
TypeError: Invalid dimensions for image data
>>> imgplot=p1.imshow(k)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/pymodules/python2.7/matplotlib/pyplot.py", line 2892, in imshow
    imlim=imlim, resample=resample, url=url, **kwargs)
  File "/usr/lib/pymodules/python2.7/matplotlib/axes.py", line 7300, in imshow
    im.set_data(X)
  File "/usr/lib/pymodules/python2.7/matplotlib/image.py", line 429, in set_data
    raise TypeError("Invalid dimensions for image data")
TypeError: Invalid dimensions for image data
>>> type.k                           
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: type object 'type' has no attribute 'k'
>>> type.k()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: type object 'type' has no attribute 'k'
>>> type(k) 
<type 'numpy.ndarray'>
>>> k.shape
(320, 256, 2800)
>>> n=k(:,:,1)
  File "<stdin>", line 1
    n=k(:,:,1)
        ^
SyntaxError: invalid syntax
>>> n=k[:,:,1]
>>> n.shape
(320, 256)
>>> imgplot=p1.imshow(n)
>>> p1.show()
>>> imgplot=p1.imshow(k[:,:,240])
>>> p1.show()                    
>>> imgplot=p1.imshow(k[:,:,800])
>>> p1.show()                    

>>> 
>>> imgplot=p1.imshow(k[:,:,1200])
>>> p1.show()                     

>>> 
>>> imgplot=p1.imshow(k[:,:,2000])
>>> p1.show()                     
>>> i=range(0,320)
>>> i.shape
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'shape'
>>> i
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319]
>>> i
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319]
>>> k=range(0,256)
>>> k 
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]
>>> k                      
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]
>>> k=np.array
>>> k.shape
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'builtin_function_or_method' object has no attribute 'shape'
>>> k.shape()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'builtin_function_or_method' object has no attribute 'shape'
>>> type(k)
<type 'builtin_function_or_method'>
>>> k
<built-in function array>
>>> k
<built-in function array>
>>> k=a.array
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'numpy.ndarray' object has no attribute 'array'
>>> k=np.array(a)
>>> k.shape
(320, 256, 2800)
>>> np_data=np.array(a)
>>> np_date
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'np_date' is not defined
>>> np_data
array([[[3488, 3488, 3487, ..., 3560, 3559, 3562],
        [3486, 3488, 3485, ..., 3560, 3561, 3560],
        [3485, 3482, 3487, ..., 3558, 3560, 3560],
        ..., 
        [3673, 3674, 3676, ..., 8195, 8155, 8193],
        [3704, 3702, 3703, ..., 6752, 6730, 6747],
        [3721, 3720, 3718, ..., 6271, 6256, 6268]],

       [[3490, 3488, 3489, ..., 3560, 3557, 3564],
        [3487, 3488, 3488, ..., 3558, 3559, 3558],
        [3489, 3490, 3491, ..., 3564, 3566, 3564],
        ..., 
        [3667, 3671, 3669, ..., 8206, 8163, 8194],
        [3701, 3703, 3705, ..., 6603, 6586, 6605],
        [3738, 3738, 3733, ..., 5789, 5782, 5789]],

       [[3481, 3485, 3486, ..., 3561, 3557, 3558],
        [3485, 3488, 3488, ..., 3560, 3559, 3559],
        [3487, 3487, 3486, ..., 3559, 3561, 3558],
        ..., 
        [3668, 3667, 3666, ..., 7992, 7954, 7989],
        [3702, 3703, 3702, ..., 6573, 6546, 6564],
        [3737, 3738, 3736, ..., 5722, 5714, 5725]],

       ..., 
       [[3459, 3456, 3459, ..., 3517, 3515, 3516],
        [3462, 3461, 3464, ..., 3520, 3521, 3519],
        [3463, 3462, 3461, ..., 3518, 3517, 3518],
        ..., 
        [3684, 3681, 3685, ..., 4992, 4995, 4996],
        [3696, 3697, 3692, ..., 4954, 4952, 4956],
        [3713, 3709, 3714, ..., 4958, 4956, 4953]],

       [[3458, 3455, 3461, ..., 3518, 3514, 3519],
        [3465, 3465, 3462, ..., 3519, 3518, 3515],
        [3461, 3461, 3461, ..., 3516, 3520, 3520],
        ..., 
        [3687, 3687, 3688, ..., 5019, 5015, 5018],
        [3696, 3698, 3700, ..., 4968, 4964, 4969],
        [3711, 3712, 3712, ..., 4969, 4967, 4965]],

       [[3461, 3461, 3463, ..., 3521, 3519, 3521],
        [3463, 3466, 3464, ..., 3523, 3524, 3523],
        [3464, 3465, 3468, ..., 3522, 3523, 3529],
        ..., 
        [3698, 3692, 3696, ..., 5038, 5035, 5038],
        [3708, 3709, 3707, ..., 5017, 5011, 5019],
        [3710, 3711, 3710, ..., 4993, 4989, 4992]]], dtype=uint16)
>>> np_data.shape
(320, 256, 2800)
>>> np_data.shape[:,:,1].shape
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: tuple indices must be integers, not tuple
>>> np_data.shape[:,:,1]      
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: tuple indices must be integers, not tuple
>>> np_data[:,:,1]         
array([[3488, 3488, 3482, ..., 3674, 3702, 3720],
       [3488, 3488, 3490, ..., 3671, 3703, 3738],
       [3485, 3488, 3487, ..., 3667, 3703, 3738],
       ..., 
       [3456, 3461, 3462, ..., 3681, 3697, 3709],
       [3455, 3465, 3461, ..., 3687, 3698, 3712],
       [3461, 3466, 3465, ..., 3692, 3709, 3711]], dtype=uint16)
>>> np_data[:,:,1].shape
(320, 256)
>>> z = np.polyfit(round(0,a.shape[2]), np_date[1,1,:], 2)      
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'np_date' is not defined
>>> z = np.polyfit(round(0,a.shape[2]), np_data[1,1,:], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/dist-packages/numpy/lib/polynomial.py", line 549, in polyfit
    raise TypeError("expected 1D vector for x")
TypeError: expected 1D vector for x
>>> temp=round(0,a.shape[2])
>>> temp.shape              
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'float' object has no attribute 'shape'
>>> temp
0.0
>>> z = np.polyfit(range(0,a.shape[2]), np_date[1,1,:], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'np_date' is not defined
>>> z = np.polyfit(range(0,a.shape[2]), np_data[1,1,:], 2)
>>> p1.plot()
[]
>>> p1.plot(z)
[<matplotlib.lines.Line2D object at 0x7f0562da5410>]
>>> p1.show
<function show at 0x7f056315ac08>
>>> p1.show()
z
>>> z
array([  3.04236913e-06,  -2.43843362e-03,   3.52836934e+03])
>>> z 
array([  3.04236913e-06,  -2.43843362e-03,   3.52836934e+03])
>>> a        
array([[[3488, 3488, 3487, ..., 3560, 3559, 3562],
        [3486, 3488, 3485, ..., 3560, 3561, 3560],
        [3485, 3482, 3487, ..., 3558, 3560, 3560],
        ..., 
        [3673, 3674, 3676, ..., 8195, 8155, 8193],
        [3704, 3702, 3703, ..., 6752, 6730, 6747],
        [3721, 3720, 3718, ..., 6271, 6256, 6268]],

       [[3490, 3488, 3489, ..., 3560, 3557, 3564],
        [3487, 3488, 3488, ..., 3558, 3559, 3558],
        [3489, 3490, 3491, ..., 3564, 3566, 3564],
        ..., 
        [3667, 3671, 3669, ..., 8206, 8163, 8194],
        [3701, 3703, 3705, ..., 6603, 6586, 6605],
        [3738, 3738, 3733, ..., 5789, 5782, 5789]],

       [[3481, 3485, 3486, ..., 3561, 3557, 3558],
        [3485, 3488, 3488, ..., 3560, 3559, 3559],
        [3487, 3487, 3486, ..., 3559, 3561, 3558],
        ..., 
        [3668, 3667, 3666, ..., 7992, 7954, 7989],
        [3702, 3703, 3702, ..., 6573, 6546, 6564],
        [3737, 3738, 3736, ..., 5722, 5714, 5725]],

       ..., 
       [[3459, 3456, 3459, ..., 3517, 3515, 3516],
        [3462, 3461, 3464, ..., 3520, 3521, 3519],
        [3463, 3462, 3461, ..., 3518, 3517, 3518],
        ..., 
        [3684, 3681, 3685, ..., 4992, 4995, 4996],
        [3696, 3697, 3692, ..., 4954, 4952, 4956],
        [3713, 3709, 3714, ..., 4958, 4956, 4953]],

       [[3458, 3455, 3461, ..., 3518, 3514, 3519],
        [3465, 3465, 3462, ..., 3519, 3518, 3515],
        [3461, 3461, 3461, ..., 3516, 3520, 3520],
        ..., 
        [3687, 3687, 3688, ..., 5019, 5015, 5018],
        [3696, 3698, 3700, ..., 4968, 4964, 4969],
        [3711, 3712, 3712, ..., 4969, 4967, 4965]],

       [[3461, 3461, 3463, ..., 3521, 3519, 3521],
        [3463, 3466, 3464, ..., 3523, 3524, 3523],
        [3464, 3465, 3468, ..., 3522, 3523, 3529],
        ..., 
        [3698, 3692, 3696, ..., 5038, 5035, 5038],
        [3708, 3709, 3707, ..., 5017, 5011, 5019],
        [3710, 3711, 3710, ..., 4993, 4989, 4992]]], dtype=uint16)
>>> z
array([  3.04236913e-06,  -2.43843362e-03,   3.52836934e+03])
>>> f=np.poly1d(z)                                       
>>> p1.plot(f)
[<matplotlib.lines.Line2D object at 0x7f0562e1cb50>]
>>> p1.show()
>>> 
>>> p1.show()
>>> p1.plot(f)
[<matplotlib.lines.Line2D object at 0x7f0562e63a50>]
>>> p1.show()
>>> f
poly1d([  3.04236913e-06,  -2.43843362e-03,   3.52836934e+03])
>>> f=p1.plot(range(0,a.shape[2]))            
>>> p1.show
<function show at 0x7f056315ac08>
>>> p1.show()
^C^XTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/pymodules/python2.7/matplotlib/pyplot.py", line 145, in show
    _show(*args, **kw)
  File "/usr/lib/pymodules/python2.7/matplotlib/backend_bases.py", line 117, in __call__
    self.mainloop()
  File "/usr/lib/pymodules/python2.7/matplotlib/backends/backend_tkagg.py", line 69, in mainloop
    Tk.mainloop()
  File "/usr/lib/python2.7/lib-tk/Tkinter.py", line 366, in mainloop
    _default_root.tk.mainloop(n)
KeyboardInterrupt
>>> 
